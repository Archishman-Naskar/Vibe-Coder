// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole{
  ADMIN
  USER
  PREMIUM_USER
}

model Account {
  id                 String   @id @default(cuid()) @map("_id")
  userId             String   @map("user_id")
  type               String
  provider           String
  providerAccountId  String   @map("provider_account_id")
  refreshToken       String?  @map("refresh_token")
  accessToken        String?  @map("access_token")
  expiresAt          Int?     @map("expires_at")
  tokenType          String?  @map("token_type")
  scope              String?
  idToken            String?  @map("id_token")
  sessionState       String?  @map("session_state")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}


model User{
  id String @id @default(cuid()) @map("_id")
  name String?
  email String @unique
  image String?
  accounts Account[]
  role UserRole @default(USER)
}

// @map() lets you rename how Prisma refers to a database columnâ€”useful for existing databases or when you prefer cleaner naming in your code without changing your database schema. like userId   String   @map("user_id") with this I use userId but but in prisma in User table user_id named column created and liked with userId

// user User @relation(fields: [userId], references: [id], onDelete: Cascade) means the every entry in the userId column of table Account is related with id column in the User table , also (onDelete: Cascade)-> means if I delet any specific entry from the id column of table User all related enetry in the userId column of table Account will be deleted. 